{"version":3,"sources":["constans.js","Components/Pages/Login/index.jsx","actions/index.js","Components/Pages/Login/LoginView.jsx","Components/Pages/Notfound.jsx","Components/HOC/Header.jsx","Components/Pages/Sites/utils.js","Components/Pages/Sites/SitesView.jsx","Components/Pages/Sites/index.jsx","Components/Pages/AlarmZones/utils.js","Components/Pages/AlarmZones/index.jsx","Components/Pages/Devices/utils.js","Components/Pages/AlarmZones/row.jsx","Components/Pages/Devices/index.js","Components/Router.jsx","reducers/index.jsx","reducers/user.js","reducers/state-request.js","sagas/index.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["SERVER_ENDPOINT","C","USER_LOGIN","LOAD_USER_LIST","GET_USER_LIST","GET_SITE_LIST","FAIL","PROCESS","DONE","Login","connect","state","userList","user","stateRequest","dispatch","loadUsers","type","saveUser","loginUser","_ref","_ref$userList","react_default","a","createElement","onClick","map","key","id","username","fail","process","Notfound","Header","children","Link","to","_callee","data","regenerator_default","wrap","_context","prev","next","axios","get","sent","Array","isArray","abrupt","stop","SitesView","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","props","_this","history","push","_getSitesRequest","getSitesRequest","then","siteList","setState","site","title","React","Component","Sites","alarmZonesLoader","_x","_alarmZonesLoader","siteId","AlarmZones","_componentWillMount","asyncToGenerator","mark","match","params","t0","t1","t2","alarmZoneList","call","console","log","zone","name","armed","devicesLoader","_devicesLoader","Row","device","model","connected","storages","storage","alarmZoneId","Devices","deviceList","row_Row","Routing","HashRouter","Header_Header","Switch","Route","exact","path","component","combineReducers","length","undefined","action","objectSpread","rootSaga","listUserLoader","takeEvery","_marked","res","_context2","put","getUsersRequest","_marked2","_context3","sagaMiddleware","createSagaMiddleware","logger","store","applyMiddleware","createStore","reducer","run","storeFactory","window","App","className","es","Router_Routing","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b5a94bc4.chunk.js","sourcesContent":["export const SERVER_ENDPOINT = 'http://localhost:8080';\n\nexport const C = {\n  USER_LOGIN: 'USER_LOGIN',\n  LOAD_USER_LIST: 'LOAD_USER_LIST',\n  GET_USER_LIST: 'GET_USER_LIST',\n  GET_SITE_LIST: 'GET_SITE_LIST',\n  FAIL: 'FAIL',\n  PROCESS: 'PROCESS',\n  DONE: 'DONE'\n};\n","import {connect} from \"react-redux\";\nimport {LoginView} from \"./LoginView\";\nimport {getUserList, loginUser} from \"../../../actions\";\n\nexport const Login = connect(\n  state => ({\n    userList: state.user.userList,\n    stateRequest: state.stateRequest\n  }),\n  dispatch => ({\n    loadUsers() {\n      dispatch(getUserList())\n    },\n    saveUser(user) {\n      dispatch(loginUser(user))\n    }\n  })\n)(LoginView);\n","import {C} from '../constans'\n\nexport const getUserList = () => (\n  {type: C.LOAD_USER_LIST}\n);\n\nexport const loginUser = (user) => (\n  {type: C.USER_LOGIN, user}\n);\n","import React from 'react'\n\nexport const LoginView = ({loadUsers, saveUser, userList = [], stateRequest}) => {\n  return (\n    <div>\n      <p><button onClick={() => loadUsers()}>Get Users</button></p>\n      { userList.map( user => (<li key={user.id} >{user.id} - {user.username} <button onClick={() => saveUser(user)}>Login</button></li>)) }\n      <div>\n        { (stateRequest.fail) ? (<p>Incorrect pass or login</p>) : ''}\n        { (stateRequest.process) ? (<p>Loading</p>) : ''}\n      </div>\n    </div>\n  )\n};\n","import React from 'react'\n\nexport const Notfound = () => (\n  <p>Page not found</p>\n);\n","import React from 'react';\nimport {Link} from 'react-router-dom'\n\n\nexport const Header= ({children}) => {\n  return (\n    <div>\n      <p>\n        <Link to=\"/login\">Login</Link>\n      </p>\n\n      <p>\n        <Link to=\"/sites\">Sites</Link>\n      </p>\n      {children}\n    </div>\n  )\n};\n\n","import axios from \"axios\";\nimport {SERVER_ENDPOINT} from \"../../../constans\";\n\nexport async function getSitesRequest () {\n  const {data} = await axios.get(SERVER_ENDPOINT + '/sites');\n  if (data && Array.isArray(data)){\n    return data;\n  }\n  return false;\n}\n","import React from 'react'\nimport {getSitesRequest} from \"./utils\";\nimport {Link} from \"react-router-dom\";\n\nexport class SitesView extends React.Component {\n\n   componentWillMount (props) {\n    if (!this.props.user.user) {\n      this.props.history.push(\"/login\");\n    }\n     getSitesRequest().then(siteList => this.setState({siteList}));\n\n   }\n  render() {\n    if (this.state) {\n      const {siteList} = this.state;\n        return (\n        <div>\n            {siteList.map( site => (\n            <div key={site.id}>\n              <h3>{site.title}</h3>\n              <p><Link to={'/sites/'+site.id+'/alarmZones'}>alarmZones</Link></p>\n              <p><Link to={'/sites/'+site.id+'/devices'}>devices</Link></p>\n            </div>)\n          )}\n        </div>\n      )\n    } else {\n      return <p>Loading</p>\n    }\n  }\n}\n","import {connect} from \"react-redux\";\nimport {SitesView} from \"./SitesView\";\n\nexport const Sites = connect(\n  state => ({\n    stateRequest: state.stateRequest,\n    user: state.user,\n  }),\n  null\n)(SitesView);\n","import axios from \"axios\";\nimport {SERVER_ENDPOINT} from \"../../../constans\";\n\nexport async function alarmZonesLoader(siteId) {\n  const {data} = await axios.get(SERVER_ENDPOINT + '/sites/'+ siteId +'/alarmzones');\n  if (data && Array.isArray(data)){\n    return data;\n  }\n  return false;\n}\n","import React from 'react'\nimport {alarmZonesLoader} from \"./utils\";\n\n\nexport class AlarmZones extends React.Component {\n  async componentWillMount (props) {\n    const {siteId} = this.props.match.params;\n    this.setState({alarmZoneList: await alarmZonesLoader(siteId)});\n  }\n  render() {\n    if (this.state) {\n      const {alarmZoneList} = this.state;\n      console.log(alarmZoneList);\n      return (\n        <div>\n          {alarmZoneList.map( zone => (\n            <div key={zone.id}>\n              <h3>{zone.name}</h3>\n              <p>{zone.armed ? 'armed' : 'no armed'}</p>\n            </div>)\n          )}\n        </div>\n      )\n    } else {\n      return <p>Loading</p>\n    }\n  }\n}\n","import axios from \"axios\";\nimport {SERVER_ENDPOINT} from \"../../../constans\";\n\nexport async function devicesLoader(siteId) {\n  const {data} = await axios.get(SERVER_ENDPOINT + '/sites/'+ siteId +'/devices');\n  if (data && Array.isArray(data)){\n    return data;\n  }\n  return false;\n}\n","import React from 'react'\n\nexport const Row = ({device}) => (\n  <tr>\n    <td>{device.title}</td>\n    <td>{device.model}</td>\n    <td>{device.connected ? '+' : '-'}</td>\n    <td>{device.storages.map( storage => (<p key={storage.id}>{storage.type} : {storage.state}</p>))}</td>\n    <td>{device.alarmZoneId}</td>\n  </tr>\n)\n\n//   //\n","import React from 'react'\nimport {devicesLoader} from \"./utils\";\nimport {Row} from \"../AlarmZones/row\";\n\n\nexport class Devices extends React.Component {\n  async componentWillMount (props) {\n    const {siteId} = this.props.match.params;\n    this.setState({deviceList: await devicesLoader(siteId)});\n  }\n  render() {\n    if (this.state) {\n      const {deviceList} = this.state;\n      console.log(deviceList);\n      return (\n        <div>\n          <table id='device-border'>\n            <tbody>\n            <tr>\n              <th>Device name</th>\n              <th>Model</th>\n              <th>Connected</th>\n              <th>Storages</th>\n              <th>Alarm zone</th>\n            </tr>\n            {deviceList.map(\n              device => (\n                <Row key={device.id} device={device} />\n              )\n            )}\n            </tbody>\n          </table>\n\n        </div>\n      )\n    } else {\n      return <p>Loading</p>\n    }\n  }\n}\n","import {Switch, Route, HashRouter} from 'react-router-dom'\nimport React from 'react';\nimport {Login} from \"./Pages/Login\";\nimport {Notfound} from \"./Pages/Notfound\";\nimport {Header} from \"./HOC/Header\";\nimport {Sites} from \"./Pages/Sites\";\nimport {AlarmZones} from \"./Pages/AlarmZones\";\nimport {Devices} from \"./Pages/Devices\";\n\nexport class Routing extends React.Component {\n\n  render() {\n    return (\n      <HashRouter>\n        <Header>\n          <Switch>\n            <Route exact path=\"/\"  component={() => <p>Test App</p>} />\n            <Route exact path=\"/login\"  component={Login} />\n            <Route exact path=\"/sites\" component={Sites} />\n            <Route path=\"/sites/:siteId/alarmZones\" component={AlarmZones} />\n            <Route path=\"/sites/:siteId/devices\" component={Devices} />\n            <Route component={Notfound} />\n          </Switch>\n        </Header>\n      </HashRouter>\n    )\n  };\n}\n\n","import { combineReducers } from 'redux'\nimport {user} from './user'\nimport {stateRequest} from \"./state-request\";\n\nexport default combineReducers({\n  user,\n  stateRequest\n})\n","import {C} from '../constans'\n\nexport const user = (state = {}, action) => {\n  switch (action.type) {\n    case C.USER_LOGIN:\n      return {...state, user: action.user};\n    case C.GET_USER_LIST:\n      return {...state, userList: action.userList};\n    default:\n      return state;\n  }\n};\n","import {C} from '../constans'\n\nexport const stateRequest = (state = {}, action) => {\n  switch (action.type) {\n    case C.FAIL:\n      return {fail: true};\n    case C.PROCESS:\n      return {process: true};\n    case C.DONE:\n      return {process: false, fail: false};\n    default:\n      return state;\n  }\n};\n","import  axios from \"axios\";\nimport {SERVER_ENDPOINT, C} from \"../constans\";\nimport {put, call, takeEvery} from 'redux-saga/effects'\n\n\nexport default function* rootSaga() {\n  yield takeEvery(C.LOAD_USER_LIST, listUserLoader)\n}\n\nfunction* listUserLoader() {\n  yield put({type: C.PROCESS});\n  const res = yield call(getUsersRequest);\n  if (res) {\n    yield put({type: C.DONE});\n    yield put({userList: res, type: C.GET_USER_LIST});\n  } else {\n    yield put({type: C.FAIL});\n  }\n}\n\nasync function getUsersRequest () {\n  const {data} = await axios.get(SERVER_ENDPOINT + '/users');\n  if (data && Array.isArray(data)){\n    return data;\n  }\n  return false;\n}\n","import {createStore, applyMiddleware} from 'redux';\nimport reducer from '../reducers'\nimport createSagaMiddleware from 'redux-saga'\nimport rootSaga from \"../sagas\";\n\n\n\nconst sagaMiddleware = createSagaMiddleware();\n\n\nconst logger = store => next => action => {\n  next(action);\n};\n\nexport const storeFactory = () => {\n  const store = applyMiddleware(logger, sagaMiddleware)(createStore)(reducer, {});\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n","import React, { Component } from 'react';\nimport './App.css';\nimport {Routing} from \"./Components/Router\";\nimport {Provider} from 'react-redux'\nimport {storeFactory} from \"./store\";\n\nconst store = storeFactory();\n\nwindow.store = store;\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Provider store={store}>\n          <Routing />\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}