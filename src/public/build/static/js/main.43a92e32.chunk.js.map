{"version":3,"sources":["../../../../public/src/constans.js","../../../../public/src/utils.js","../../../../public/src/containers/login-page.jsx","../../../../public/src/actions/users.js","../../../../public/src/components/Login/LoginView.jsx","../../../../public/src/components/Notfound.jsx","../../../../public/src/components/blocks/Header.jsx","../../../../public/src/components/Sites/utils.js","../../../../public/src/components/Sites/SitesView.jsx","../../../../public/src/containers/sites-page.jsx","../../../../public/src/components/AlarmZones/utils.js","../../../../public/src/components/AlarmZones/index.jsx","../../../../public/src/components/Devices/utils.js","../../../../public/src/components/Devices/row.jsx","../../../../public/src/components/Devices/index.jsx","../../../../public/src/containers/devices-page.jsx","../../../../public/src/components/blocks/privat-route.jsx","../../../../public/src/components/Router.jsx","../../../../public/src/reducers/index.jsx","../../../../public/src/reducers/user.js","../../../../public/src/reducers/state-request.js","../../../../public/src/sagas/index.js","../../../../public/src/store/index.js","../../../../public/src/App.js","../../../../public/src/serviceWorker.js","../../../../public/src/index.js"],"names":["SERVER_ENDPOINT","C","USER_LOGIN","LOAD_USER_LIST","GET_USER_LIST","LOAD_DEVICE_LIST","FAIL","PROCESS","DONE","Auth","user","logIn","localStorage","setItem","this","logOut","removeItem","checkLogin","getItem","Login","connect","state","userList","stateRequest","dispatch","loadUsers","type","saveUser","loginUser","_ref","_ref$loadUsers","_ref$saveUser","_ref$userList","_ref$stateRequest","react_default","a","createElement","onClick","map","key","id","username","fail","process","Notfound","Header","children","Link","to","_callee","data","regenerator_default","wrap","_context","prev","next","axios","get","sent","Array","isArray","abrupt","stop","SitesView","_React$Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","props","_this","_getSitesRequest","getSitesRequest","then","siteList","setState","site","title","React","Component","Sites","alarmZonesLoader","_x","_alarmZonesLoader","siteId","AlarmZones","_componentWillMount","asyncToGenerator","mark","match","params","t0","t1","t2","alarmZoneList","call","zone","name","armed","devicesLoader","_devicesLoader","Row","device","model","connected","storages","storage","alarmZoneId","Devices","deviceList","console","log","row_Row","DevicesPage","PrivateRoute","component","rest","objectWithoutProperties","Route","assign","render","Redirect","pathname","from","location","Routing","HashRouter","Header_Header","Switch","exact","path","combineReducers","length","undefined","action","objectSpread","rootSaga","listUserLoader","takeEvery","_marked","res","_context2","put","getUsersRequest","_marked2","_context3","sagaMiddleware","createSagaMiddleware","logger","store","applyMiddleware","createStore","reducer","run","storeFactory","window","App","className","es","Router_Routing","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.43a92e32.chunk.js","sourcesContent":["export const SERVER_ENDPOINT = 'http://localhost:8080';\n\nexport const C = {\n  USER_LOGIN: 'USER_LOGIN',\n  LOAD_USER_LIST: 'LOAD_USER_LIST',\n  GET_USER_LIST: 'GET_USER_LIST',\n  LOAD_DEVICE_LIST: 'LOAD_DEVICE_LIST',\n  FAIL: 'FAIL',\n  PROCESS: 'PROCESS',\n  DONE: 'DONE'\n};\n","export const Auth = {\n  user: 'user',\n  logIn(){\n    localStorage.setItem(this.user, this.user);\n  },\n  logOut(){\n    localStorage.removeItem(this.user);\n  },\n  checkLogin(){\n    return !!localStorage.getItem(this.user);\n  }\n};\n","import {connect} from \"react-redux\";\nimport {LoginView} from \"../components/Login/LoginView\";\nimport {getUserList, loginUser} from \"../actions/users\";\nimport {Auth} from \"../utils\";\n\nexport const Login = connect(\n  state => ({\n    userList: state.user.userList,\n    stateRequest: state.stateRequest\n  }),\n  dispatch => ({\n    loadUsers() {\n      dispatch(getUserList())\n    },\n    saveUser(user) {\n      Auth.logIn();\n      dispatch(loginUser(user))\n    }\n  })\n)(LoginView);\n","import {C} from '../constans'\n\nexport const getUserList = () => (\n  {type: C.LOAD_USER_LIST}\n);\n\nexport const loginUser = (user) => (\n  {type: C.USER_LOGIN, user}\n);\n","import React from 'react'\n\nexport const LoginView = ({loadUsers = () => null, saveUser = () => null, userList = [], stateRequest = {}}) => {\n  return (\n    <div>\n      <p><button onClick={() => loadUsers()}>Get Users</button></p>\n      { userList.map( user => (<li key={user.id} >{user.id} - {user.username} <button onClick={() => saveUser(user)}>Login</button></li>)) }\n      <div>\n        { (stateRequest.fail) ? (<p>Incorrect pass or login</p>) : ''}\n        { (stateRequest.process) ? (<p>Loading</p>) : ''}\n      </div>\n    </div>\n  )\n};\n","import React from 'react'\n\nexport const Notfound = () => (\n  <p>Page not found</p>\n);\n","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport {Auth} from \"../../utils\";\n\n\nexport const Header= ({children}) => {\n  return (\n    <div>\n      <p>\n        <Link to=\"/login\">Login</Link>\n      </p>\n\n      <p>\n        <Link to=\"/sites\">Sites</Link>\n      </p>\n      <p>\n        <Link to=\"/login\" onClick={() => Auth.logOut()}>Log Out</Link>\n      </p>\n      {children}\n    </div>\n  )\n};\n\n","import axios from \"axios\";\nimport {SERVER_ENDPOINT} from \"../../constans\";\n\nexport async function getSitesRequest () {\n  const {data} = await axios.get(SERVER_ENDPOINT + '/sites');\n  if (data && Array.isArray(data)){\n    return data;\n  }\n  return false;\n}\n","import React from 'react'\nimport {getSitesRequest} from \"./utils\";\nimport {Link} from \"react-router-dom\";\n\nexport class SitesView extends React.Component {\n   componentWillMount (props) {\n     getSitesRequest().then(siteList => this.setState({siteList}));\n   }\n  render() {\n    if (this.state) {\n      const {siteList} = this.state;\n        return (\n        <div>\n            {siteList.map( site => (\n            <div key={site.id}>\n              <h3>{site.title}</h3>\n              <p><Link to={'/sites/'+site.id+'/alarmZones'}>alarmZones</Link></p>\n              <p><Link to={'/sites/'+site.id+'/devices'}>devices</Link></p>\n            </div>)\n          )}\n        </div>\n      )\n    } else {\n      return <p>Loading</p>\n    }\n  }\n}\n","import {connect} from \"react-redux\";\nimport {SitesView} from \"../components/Sites/SitesView\";\n\nexport const Sites = connect(\n  state => ({\n    stateRequest: state.stateRequest,\n    user: state.user,\n  }),\n  null\n)(SitesView);\n","import axios from \"axios\";\nimport {SERVER_ENDPOINT} from \"../../constans\";\n\nexport async function alarmZonesLoader(siteId) {\n  const {data} = await axios.get(SERVER_ENDPOINT + '/sites/'+ siteId +'/alarmzones');\n  if (data && Array.isArray(data)){\n    return data;\n  }\n  return false;\n}\n","import React from 'react'\nimport {alarmZonesLoader} from \"./utils\";\n\n\nexport class AlarmZones extends React.Component {\n  async componentWillMount (props) {\n    const {siteId} = this.props.match.params;\n    this.setState({alarmZoneList: await alarmZonesLoader(siteId)});\n  }\n  render() {\n    if (this.state) {\n      const {alarmZoneList} = this.state;\n      return (\n        <div>\n          {alarmZoneList.map( zone => (\n            <div key={zone.id}>\n              <h3>{zone.name}</h3>\n              <p>{zone.armed ? 'armed' : 'no armed'}</p>\n            </div>)\n          )}\n        </div>\n      )\n    } else {\n      return <p>Loading</p>\n    }\n  }\n}\n","import axios from \"axios\";\nimport {SERVER_ENDPOINT} from \"../../constans\";\n\nexport async function devicesLoader(siteId) {\n  const {data} = await axios.get(SERVER_ENDPOINT + '/sites/'+ siteId +'/devices');\n  if (data && Array.isArray(data)){\n    return data;\n  }\n  return false;\n}\n","import React from 'react'\n\nexport const Row = ({device}) => (\n  <tr>\n    <td>{device.title}</td>\n    <td>{device.model}</td>\n    <td>{device.connected ? '+' : '-'}</td>\n    <td>{device.storages.map( storage => (<p key={storage.id}>{storage.type} : {storage.state}</p>))}</td>\n    <td>{device.alarmZoneId}</td>\n  </tr>\n)\n\n","import React from 'react'\nimport {devicesLoader} from \"./utils\";\nimport {Row} from \"./row\";\n\n\nexport class Devices extends React.Component {\n  async componentWillMount (props) {\n    const {siteId} = this.props.match.params;\n    this.setState({deviceList: await devicesLoader(siteId)});\n  }\n  render() {\n    if (this.state) {\n      const {deviceList} = this.state;\n      console.log(deviceList);\n      return (\n        <div>\n          <table id='device-border'>\n            <tbody>\n            <tr>\n              <th>Device name</th>\n              <th>Model</th>\n              <th>Connected</th>\n              <th>Storages</th>\n              <th>Alarm zone</th>\n            </tr>\n            {deviceList.map(\n              device => (\n                <Row key={device.id} device={device} />\n              )\n            )}\n            </tbody>\n          </table>\n        </div>\n      )\n    } else {\n      return <p>Loading</p>\n    }\n  }\n}\n","import {Devices} from \"../components/Devices/index.jsx\";\nimport connect from \"react-redux/es/connect/connect\";\n\nexport const DevicesPage = connect(\n  state => ({\n    stateRequest: state.stateRequest\n  }),\n  null\n)(Devices);\n","import React from \"react\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport Route from \"react-router-dom/es/Route\";\nimport {Auth} from \"../../utils\";\n\nexport function PrivateRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        return (\n          Auth.checkLogin() ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      ) }\n      }\n    />\n  );\n}\n","import {Switch, Route, HashRouter} from 'react-router-dom'\nimport React from 'react';\nimport {Login} from \"../containers/login-page\";\nimport {Notfound} from \"./Notfound\";\nimport {Header} from \"./blocks/Header\";\nimport {Sites} from \"../containers/sites-page\";\nimport {AlarmZones} from \"./AlarmZones\";\nimport {DevicesPage} from \"../containers/devices-page\";\nimport {PrivateRoute} from \"./blocks/privat-route\";\n\nexport class Routing extends React.Component {\n\n  render() {\n    return (\n      <HashRouter>\n        <Header>\n          <Switch>\n            <Route exact path=\"/\"  component={() => <p>Test App</p>} />\n            <Route exact path=\"/login\"  component={Login} />\n            <PrivateRoute exact path=\"/sites\" component={Sites} />\n            <PrivateRoute path=\"/sites/:siteId/alarmZones\" component={AlarmZones} />\n            <PrivateRoute path=\"/sites/:siteId/devices\" component={DevicesPage} />\n            <Route component={Notfound} />\n          </Switch>\n        </Header>\n      </HashRouter>\n    )\n  };\n}\n\n","import { combineReducers } from 'redux'\nimport {user} from './user'\nimport {stateRequest} from \"./state-request\";\n\nexport default combineReducers({\n  user,\n  stateRequest\n})\n","import {C} from '../constans'\n\nexport const user = (state = {}, action) => {\n  switch (action.type) {\n    case C.USER_LOGIN:\n      return {...state, user: action.user};\n    case C.GET_USER_LIST:\n      return {...state, userList: action.userList};\n    default:\n      return state;\n  }\n};\n","import {C} from '../constans'\n\nexport const stateRequest = (state = {}, action) => {\n  switch (action.type) {\n    case C.FAIL:\n      return {fail: true};\n    case C.PROCESS:\n      return {process: true};\n    case C.DONE:\n      return {process: false, fail: false};\n    default:\n      return state;\n  }\n};\n","import  axios from \"axios\";\nimport {SERVER_ENDPOINT, C} from \"../constans\";\nimport {put, call, takeEvery} from 'redux-saga/effects'\n\n\nexport default function* rootSaga() {\n  yield takeEvery(C.LOAD_USER_LIST, listUserLoader);\n}\n\n\n\nfunction* listUserLoader() {\n  yield put({type: C.PROCESS});\n  const res = yield call(getUsersRequest);\n  if (res) {\n    yield put({type: C.DONE});\n    yield put({userList: res, type: C.GET_USER_LIST});\n  } else {\n    yield put({type: C.FAIL});\n  }\n}\n\nasync function getUsersRequest () {\n  const {data} = await axios.get(SERVER_ENDPOINT + '/users');\n  if (data && Array.isArray(data)){\n    return data;\n  }\n  return false;\n}\n","import {createStore, applyMiddleware} from 'redux';\nimport reducer from '../reducers'\nimport createSagaMiddleware from 'redux-saga'\nimport rootSaga from \"../sagas\";\n\n\n\nconst sagaMiddleware = createSagaMiddleware();\n\n\nconst logger = store => next => action => {\n  console.log(action);\n  next(action);\n};\n\nexport const storeFactory = () => {\n  const store = applyMiddleware(logger, sagaMiddleware)(createStore)(reducer, {});\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n","import React, { Component } from 'react';\nimport './App.css';\nimport {Routing} from \"./components/Router\";\nimport {Provider} from 'react-redux'\nimport {storeFactory} from \"./store\";\n\nconst store = storeFactory();\n\nwindow.store = store;\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Provider store={store}>\n          <Routing />\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}